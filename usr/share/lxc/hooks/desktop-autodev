#!/bin/sh
#
# Add device nodes to run a full desktop in the container. As everyone
# will point out this makes the host of this container a lot less secure,
# of course.
#

PULSE_CLIENT_CONF=/etc/pulse/client.conf
export LC_ALL=C

device_clone_script()
{
        echo "# $1"
        case `stat -c '%F' $1` in
                "symbolic link")
                        echo "rm -f $LXC_ROOTFS_MOUNT$1"
                        echo "ln -s $(readlink -f $1) $LXC_ROOTFS_MOUNT$1"

                        echo "rm -f $1" >> $LXC_ROOTFS_MOUNT/etc/rcS.d/mknodes
                        echo "ln -s $(readlink -f $1) $1" >> $LXC_ROOTFS_MOUNT/etc/rcS.d/mknodes

                        ;;
                "block special file")
                        echo "rm -f $LXC_ROOTFS_MOUNT$1"
                        stat -L -c "mknod $LXC_ROOTFS_MOUNT%n b 0x%t 0x%T" $1

                        echo "rm -f $LXC_ROOTFS_MOUNT$1" >> $LXC_ROOTFS_MOUNT/etc/rcS.d/mknodes
                        stat -L -c "mknod $LXC_ROOTFS_MOUNT%n b 0x%t 0x%T" $1 >> $LXC_ROOTFS_MOUNT/etc/rcS.d/mknodes

                        ;;
                "character special file")
                        echo "rm -f $LXC_ROOTFS_MOUNT$1"
                        stat -L -c "mknod $LXC_ROOTFS_MOUNT%n c 0x%t 0x%T" $1

                        echo "rm -f $LXC_ROOTFS_MOUNT$1" >> $LXC_ROOTFS_MOUNT/etc/rcS.d/mknodes
                        stat -L -c "mknod $LXC_ROOTFS_MOUNT%n c 0x%t 0x%T" $1 >> $LXC_ROOTFS_MOUNT/etc/rcS.d/mknodes
                        ;;
                "directory")
                        echo "mkdir -p $LXC_ROOTFS_MOUNT$1"

                        echo "mkdir -p $LXC_ROOTFS_MOUNT$1" >> $LXC_ROOTFS_MOUNT/etc/rcS.d/mknodes
                        ;;
                *)
                        return
                        ;;
        esac
        stat -L -c "chmod %a $LXC_ROOTFS_MOUNT%n" $1
        stat -L -c "chown %u:%g $LXC_ROOTFS_MOUNT%n" $1

        stat -L -c "chmod %a $LXC_ROOTFS_MOUNT%n" $1 >> $LXC_ROOTFS_MOUNT/etc/rcS.d/mknodes
        stat -L -c "chown %u:%g $LXC_ROOTFS_MOUNT%n" $1 >> $LXC_ROOTFS_MOUNT/etc/rcS.d/mknodes
}

clone_device()
{
        echo "`device_clone_script $1`"

        if [ -n "$LXC_ROOTFS_MOUNT" -a -d $LXC_ROOTFS_MOUNT/dev ]; then
                eval "`device_clone_script $1`"
        fi
}

clone_devices()
{
        for _device in "$@"; do
                clone_device $_device
        done
}

exec 2>&1

if [ -n "$LXC_ROOTFS_MOUNT" -a -d $LXC_ROOTFS_MOUNT/etc ]; then
    mkdir -p $LXC_ROOTFS_MOUNT/etc/rcS.d
    echo > $LXC_ROOTFS_MOUNT/etc/rcS.d/mknodes
    chmod 0755 $LXC_ROOTFS_MOUNT/etc/rcS.d/mknodes
fi

#        /dev/pts \
#        /dev/pts/* \
#        \

clone_devices \
        /dev/console \
        /dev/vga_arbiter \
        /dev/video0 \
        /dev/sr0 \
        /dev/fb0 \
        /dev/fb1 \
        /dev/mem \
        /dev/ptmx \
        /dev/psaux \
        /dev/i2c-* \
        /dev/hidraw0 \
        /dev/hidraw1 \
        /dev/uinput \
        \
        /dev/bus \
        /dev/bus/* \
        /dev/bus/*/* \
        /dev/bus/*/*/* \
        \
        /dev/v4l \
        /dev/v4l/* \
        /dev/v4l/*/* \
        \
        /dev/dri \
        /dev/dri/* \
        \
        /dev/input \
        /dev/input/* \
        /dev/input/*/* \
        \
        /dev/net \
        /dev/net/tun \
        \
        /dev/tty[0-9] \
        /dev/tty[0-9][0-9] \
        \
        /dev/snd \
        /dev/snd/* \
        /dev/snd/*/* \


# For Docker in LXC with lxc.aa_profile = lxc-container-default-with-nesting.
clone_devices \
	/dev/loop-control \
	/dev/loop[0-9]*

# For audio output, when not using PulseAudio over TCP.  I can hear output
# from aplay with this but PulseAudio in user mode didn't work with this.
#clone_devices \
#	/dev/snd/*

if [ -n "$LXC_ROOTFS_MOUNT" -a -d $LXC_ROOTFS_MOUNT/etc ]; then
        #rm -f $LXC_ROOTFS_MOUNT/dev/vga_arbiter
        #rm -f $LXC_ROOTFS_MOUNT/dev/fb0
        #rm -f $LXC_ROOTFS_MOUNT/dev/console
        for i in 1 2 3 4 5 6 7; do
                rm -f $LXC_ROOTFS_MOUNT/dev/tty$i
        done
        echo "Devices now:"
        find $LXC_ROOTFS_MOUNT/dev -ls

        mkdir -p $LXC_ROOTFS_MOUNT/etc/X11
        mkdir -p $LXC_ROOTFS_MOUNT/etc/X11/xorg.conf.d

#    cat >$LXC_ROOTFS_MOUNT/etc/X11/xorg.conf.d/10-input.conf <<EOF
#    Section "ServerFlags"
#	Option "AutoAddDevices" "False"
#    EndSection
#
#    Section "ServerLayout"
#	Identifier     "Desktop"
#	InputDevice    "Mouse0" "CorePointer"
#	InputDevice    "Keyboard0" "CoreKeyboard"
#    EndSection
#
#    Section "InputDevice"
#	Identifier "Keyboard0"
#	Driver "kbd"
#	Option "XkbLayout" "en"
#    EndSection
#    
#    Section "InputDevice"
#	Identifier "Mouse0"
#	Driver "mouse"
#	Option "Protocol" "auto"
#	Option "Device" "/dev/input/mice"
#	Option "ZAxisMapping" "4 5 6 7"
#    EndSection 
#EOF

    cat >$LXC_ROOTFS_MOUNT/etc/X11/xorg.conf.d/10-evdev.conf <<EOF
#
# Catch-all evdev loader for udev-based systems
# We don't simply match on any device since that also adds accelerometers
# and other devices that we don't really want to use. The list below
# matches everything but joysticks.

Section "InputClass"
        Identifier "evdev pointer catchall"
        MatchIsPointer "on"
        MatchDevicePath "/dev/input/event*"
        Driver "evdev"
EndSection

Section "InputClass"
        Identifier "evdev keyboard catchall"
        MatchIsKeyboard "on"
        MatchDevicePath "/dev/input/event*"
        Driver "evdev"
EndSection
EOF


#        echo > $LXC_ROOTFS_MOUNT/etc/X11/xorg.conf
#
#        cat >>$LXC_ROOTFS_MOUNT/etc/X11/xorg.conf <<EOF
#Section "ServerFlags"
##  Option "AutoAddDevices" "false"
#  Option "AutoAddDevices" "true"
#EndSection
#EOF
#
#        (cd /dev/input && for input in event* mouse* mice; do
#        cat >>$LXC_ROOTFS_MOUNT/etc/X11/xorg.conf <<EOF
#
#Section "InputDevice"
#  Identifier "$input"
#  Driver "evdev"
#  Option "Device" "/dev/input/$input"
#  Option "AutoServerLayout" "true"
#EndSection
#EOF
#        done)

        mkdir -p $LXC_ROOTFS_MOUNT/etc/lightdm
        cat >$LXC_ROOTFS_MOUNT/etc/lightdm/lightdm.conf <<EOF
[LightDM]
minimum-vt=8
#minimum-vt=$(fgconsole --next-available)
EOF

        mkdir -p $LXC_ROOTFS_MOUNT/usr/share/locale/en/LC_MESSAGES
        msgfmt -o $LXC_ROOTFS_MOUNT/usr/share/locale/en/LC_MESSAGES/unity.mo - <<EOF
msgid "Ubuntu Desktop"
msgstr "$LXC_NAME"
EOF
fi

mkdir -p "$LXC_ROOTFS_MOUNT`dirname $PULSE_CLIENT_CONF`"
cp -p $PULSE_CLIENT_CONF "$LXC_ROOTFS_MOUNT$PULSE_CLIENT_CONF"

if ! grep -q 'rm -f /var/crash/_sbin_plymouthd.0.crash' $LXC_ROOTFS_MOUNT/etc/rc.local; then
        /bin/ed $LXC_ROOTFS_MOUNT/etc/rc.local <<EOF
/^exit 0
i
rm -f /var/crash/_sbin_plymouthd.0.crash
.
w
q
EOF
fi

exit 0
